%sparksql

with
mst_categories as (
select 1 as id, 'ladys_fashion' as name, '2016-01-01 10:00:00' as stamp
union all
select 2 as id, 'mens_fashion' as name, '2016-01-01 10:00:00' as stamp
union all
select 3 as id, 'book' as name, '2016-01-01 10:00:00' as stamp
union all
select 4 as id, 'game' as name, '2016-01-01 10:00:00' as stamp
union all
select 5 as id, 'dvd' as name, '2016-01-01 10:00:00' as stamp
union all
select 6 as id, 'food' as name, '2016-01-01 10:00:00' as stamp
union all
select 7 as id, 'supplement' as name, '2016-01-01 10:00:00' as stamp
union all
select 6 as id, 'cooking' as name, '2016-02-01 10:00:00' as stamp
)

/* 테이블 전체의 레코드 수와 유니크한 키의 수가 일치하는지 확인하여 중복 존재 여부를 알 수 있다*/

select count(1) as total_num, count(distinct id) as key_num
from mst_categories

/* 테이블 내부에 키의 중복이 존재하는 것을 확인했으면, 
구체적으로 어떤 키의 레코드가 어떻게 중복되는지 아래와 같이 확인할 수 있다 */

select id, count(*) as record_num, 
concat_ws(',', collect_list(name)) as name_list, concat_ws(',', collect_list(stamp)) as stamp_list -- 데이터를 list로 집약하고, 쉼표로 구분된 문자열로 변환하기
from mst_categories
group by id
having count(*) > 1 -- 중복된 ID 확인하기


/* 원래 레코드 형식을 그대로 출력하고 싶은 경우 다음과 같이 할 수 있다 */
, mst_categories_with_key_num as (
select *, count(1) over(partition by id) as key_num
from mst_categories
)


select *
from mst_categories_with_key_num
where key_num > 1 -- 중복된 ID 확인하기
